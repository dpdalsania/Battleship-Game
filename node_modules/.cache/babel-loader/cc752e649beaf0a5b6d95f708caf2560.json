{"ast":null,"code":"import _objectSpread from \"/Users/drashti/Documents/battleship-project/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/objectSpread2\";\nimport { domain, jsonHeaders, handleJsonResponse } from \"./constants\";\nimport { POSTMESSAGE, FETCHLASTMESSAGE, DELETEMESSAGE, GETOLDMESSAGES } from \"../actionTypes\";\nvar url = domain + \"/messages\";\nexport var postMessage = function postMessage(messageData) {\n  return function (dispatch, getState) {\n    dispatch({\n      type: POSTMESSAGE.START\n    });\n    var token = getState().auth.login.result.token;\n    return fetch(url, {\n      method: \"POST\",\n      headers: _objectSpread({}, jsonHeaders, {\n        Authorization: \"Bearer \" + token\n      }),\n      body: JSON.stringify(messageData)\n    }).then(handleJsonResponse).then(function (result) {\n      return dispatch({\n        type: POSTMESSAGE.SUCCESS,\n        payload: result\n      });\n    }).catch(function (err) {\n      return Promise.reject(dispatch({\n        type: POSTMESSAGE.FAIL,\n        payload: err\n      }));\n    });\n  };\n};\nexport var fetchLastMessage = function fetchLastMessage(playerName) {\n  return function (dispatch) {\n    dispatch({\n      type: FETCHLASTMESSAGE.START\n    });\n    return fetch(url + \"?limit=1&offset=0&username=\" + playerName, {\n      method: \"GET\",\n      headers: jsonHeaders\n    }).then(handleJsonResponse).then(function (result) {\n      return dispatch({\n        type: FETCHLASTMESSAGE.SUCCESS,\n        payload: result\n      });\n    }).catch(function (err) {\n      return Promise.reject(dispatch({\n        type: FETCHLASTMESSAGE.FAIL,\n        payload: err\n      }));\n    });\n  };\n};\nexport var deleteMessage = function deleteMessage(messageId, token) {\n  return function (dispatch) {\n    dispatch({\n      type: DELETEMESSAGE.START\n    });\n    return fetch(url + \"/\" + messageId, {\n      method: \"DELETE\",\n      headers: _objectSpread({}, jsonHeaders, {\n        Authorization: \"Bearer \" + token\n      })\n    }).then(handleJsonResponse).then(function (result) {\n      return dispatch({\n        type: DELETEMESSAGE.SUCCESS,\n        payload: result\n      });\n    }).catch(function (err) {\n      return Promise.reject(dispatch({\n        type: DELETEMESSAGE.FAIL,\n        payload: err\n      }));\n    });\n  };\n};\nexport var getOldMessages = function getOldMessages(playerName) {\n  return function (dispatch) {\n    dispatch({\n      type: GETOLDMESSAGES.START\n    });\n    return fetch(url + \"?limit=100&offset=0&username=\" + playerName, {\n      method: \"GET\",\n      headers: jsonHeaders\n    }).then(handleJsonResponse).then(function (result) {\n      return dispatch({\n        type: GETOLDMESSAGES.SUCCESS,\n        payload: result\n      });\n    }).catch(function (err) {\n      return Promise.reject(dispatch({\n        type: GETOLDMESSAGES.FAIL,\n        payload: err\n      }));\n    });\n  };\n};","map":{"version":3,"sources":["/Users/drashti/Documents/battleship-project/src/redux/actionCreators/messages.js"],"names":["domain","jsonHeaders","handleJsonResponse","POSTMESSAGE","FETCHLASTMESSAGE","DELETEMESSAGE","GETOLDMESSAGES","url","postMessage","messageData","dispatch","getState","type","START","token","auth","login","result","fetch","method","headers","Authorization","body","JSON","stringify","then","SUCCESS","payload","catch","err","Promise","reject","FAIL","fetchLastMessage","playerName","deleteMessage","messageId","getOldMessages"],"mappings":";AAAA,SAASA,MAAT,EAAiBC,WAAjB,EAA8BC,kBAA9B,QAAwD,aAAxD;AACA,SACEC,WADF,EAEEC,gBAFF,EAGEC,aAHF,EAIEC,cAJF,QAKO,gBALP;AAOA,IAAMC,GAAG,GAAGP,MAAM,GAAG,WAArB;AAEA,OAAO,IAAMQ,WAAW,GAAG,SAAdA,WAAc,CAAAC,WAAW;AAAA,SAAI,UAACC,QAAD,EAAWC,QAAX,EAAwB;AAChED,IAAAA,QAAQ,CAAC;AACPE,MAAAA,IAAI,EAAET,WAAW,CAACU;AADX,KAAD,CAAR;AAGA,QAAMC,KAAK,GAAGH,QAAQ,GAAGI,IAAX,CAAgBC,KAAhB,CAAsBC,MAAtB,CAA6BH,KAA3C;AACA,WAAOI,KAAK,CAACX,GAAD,EAAM;AAChBY,MAAAA,MAAM,EAAE,MADQ;AAEhBC,MAAAA,OAAO,oBAAOnB,WAAP;AAAoBoB,QAAAA,aAAa,EAAE,YAAYP;AAA/C,QAFS;AAGhBQ,MAAAA,IAAI,EAAEC,IAAI,CAACC,SAAL,CAAef,WAAf;AAHU,KAAN,CAAL,CAKJgB,IALI,CAKCvB,kBALD,EAMJuB,IANI,CAMC,UAAAR,MAAM,EAAI;AACd,aAAOP,QAAQ,CAAC;AACdE,QAAAA,IAAI,EAAET,WAAW,CAACuB,OADJ;AAEdC,QAAAA,OAAO,EAAEV;AAFK,OAAD,CAAf;AAID,KAXI,EAYJW,KAZI,CAYE,UAAAC,GAAG,EAAI;AACZ,aAAOC,OAAO,CAACC,MAAR,CAAerB,QAAQ,CAAC;AAAEE,QAAAA,IAAI,EAAET,WAAW,CAAC6B,IAApB;AAA0BL,QAAAA,OAAO,EAAEE;AAAnC,OAAD,CAAvB,CAAP;AACD,KAdI,CAAP;AAeD,GApBqC;AAAA,CAA/B;AAsBP,OAAO,IAAMI,gBAAgB,GAAG,SAAnBA,gBAAmB,CAAAC,UAAU;AAAA,SAAI,UAAAxB,QAAQ,EAAI;AACxDA,IAAAA,QAAQ,CAAC;AACPE,MAAAA,IAAI,EAAER,gBAAgB,CAACS;AADhB,KAAD,CAAR;AAGA,WAAOK,KAAK,CAACX,GAAG,gCAAH,GAAsC2B,UAAvC,EAAmD;AAC7Df,MAAAA,MAAM,EAAE,KADqD;AAE7DC,MAAAA,OAAO,EAAEnB;AAFoD,KAAnD,CAAL,CAIJwB,IAJI,CAICvB,kBAJD,EAKJuB,IALI,CAKC,UAAAR,MAAM,EAAI;AACd,aAAOP,QAAQ,CAAC;AACdE,QAAAA,IAAI,EAAER,gBAAgB,CAACsB,OADT;AAEdC,QAAAA,OAAO,EAAEV;AAFK,OAAD,CAAf;AAID,KAVI,EAWJW,KAXI,CAWE,UAAAC,GAAG,EAAI;AACZ,aAAOC,OAAO,CAACC,MAAR,CACLrB,QAAQ,CAAC;AAAEE,QAAAA,IAAI,EAAER,gBAAgB,CAAC4B,IAAzB;AAA+BL,QAAAA,OAAO,EAAEE;AAAxC,OAAD,CADH,CAAP;AAGD,KAfI,CAAP;AAgBD,GApByC;AAAA,CAAnC;AAsBP,OAAO,IAAMM,aAAa,GAAG,SAAhBA,aAAgB,CAACC,SAAD,EAAYtB,KAAZ;AAAA,SAAsB,UAAAJ,QAAQ,EAAI;AAC7DA,IAAAA,QAAQ,CAAC;AACPE,MAAAA,IAAI,EAAEP,aAAa,CAACQ;AADb,KAAD,CAAR;AAGA,WAAOK,KAAK,CAACX,GAAG,MAAH,GAAY6B,SAAb,EAAwB;AAClCjB,MAAAA,MAAM,EAAE,QAD0B;AAElCC,MAAAA,OAAO,oBAAOnB,WAAP;AAAoBoB,QAAAA,aAAa,EAAE,YAAYP;AAA/C;AAF2B,KAAxB,CAAL,CAIJW,IAJI,CAICvB,kBAJD,EAKJuB,IALI,CAKC,UAAAR,MAAM,EAAI;AACd,aAAOP,QAAQ,CAAC;AACdE,QAAAA,IAAI,EAAEP,aAAa,CAACqB,OADN;AAEdC,QAAAA,OAAO,EAAEV;AAFK,OAAD,CAAf;AAID,KAVI,EAWJW,KAXI,CAWE,UAAAC,GAAG,EAAI;AACZ,aAAOC,OAAO,CAACC,MAAR,CACLrB,QAAQ,CAAC;AAAEE,QAAAA,IAAI,EAAEP,aAAa,CAAC2B,IAAtB;AAA4BL,QAAAA,OAAO,EAAEE;AAArC,OAAD,CADH,CAAP;AAGD,KAfI,CAAP;AAgBD,GApB4B;AAAA,CAAtB;AAsBP,OAAO,IAAMQ,cAAc,GAAG,SAAjBA,cAAiB,CAAAH,UAAU;AAAA,SAAI,UAAAxB,QAAQ,EAAI;AACtDA,IAAAA,QAAQ,CAAC;AACPE,MAAAA,IAAI,EAAEN,cAAc,CAACO;AADd,KAAD,CAAR;AAGA,WAAOK,KAAK,CAACX,GAAG,kCAAH,GAAwC2B,UAAzC,EAAqD;AAC/Df,MAAAA,MAAM,EAAE,KADuD;AAE/DC,MAAAA,OAAO,EAAEnB;AAFsD,KAArD,CAAL,CAIJwB,IAJI,CAICvB,kBAJD,EAKJuB,IALI,CAKC,UAAAR,MAAM,EAAI;AACd,aAAOP,QAAQ,CAAC;AACdE,QAAAA,IAAI,EAAEN,cAAc,CAACoB,OADP;AAEdC,QAAAA,OAAO,EAAEV;AAFK,OAAD,CAAf;AAID,KAVI,EAWJW,KAXI,CAWE,UAAAC,GAAG,EAAI;AACZ,aAAOC,OAAO,CAACC,MAAR,CACLrB,QAAQ,CAAC;AAAEE,QAAAA,IAAI,EAAEN,cAAc,CAAC0B,IAAvB;AAA6BL,QAAAA,OAAO,EAAEE;AAAtC,OAAD,CADH,CAAP;AAGD,KAfI,CAAP;AAgBD,GApBuC;AAAA,CAAjC","sourcesContent":["import { domain, jsonHeaders, handleJsonResponse } from \"./constants\";\nimport {\n  POSTMESSAGE,\n  FETCHLASTMESSAGE,\n  DELETEMESSAGE,\n  GETOLDMESSAGES\n} from \"../actionTypes\";\n\nconst url = domain + \"/messages\";\n\nexport const postMessage = messageData => (dispatch, getState) => {\n  dispatch({\n    type: POSTMESSAGE.START\n  });\n  const token = getState().auth.login.result.token;\n  return fetch(url, {\n    method: \"POST\",\n    headers: { ...jsonHeaders, Authorization: \"Bearer \" + token },\n    body: JSON.stringify(messageData)\n  })\n    .then(handleJsonResponse)\n    .then(result => {\n      return dispatch({\n        type: POSTMESSAGE.SUCCESS,\n        payload: result\n      });\n    })\n    .catch(err => {\n      return Promise.reject(dispatch({ type: POSTMESSAGE.FAIL, payload: err }));\n    });\n};\n\nexport const fetchLastMessage = playerName => dispatch => {\n  dispatch({\n    type: FETCHLASTMESSAGE.START\n  });\n  return fetch(url + `?limit=1&offset=0&username=` + playerName, {\n    method: \"GET\",\n    headers: jsonHeaders\n  })\n    .then(handleJsonResponse)\n    .then(result => {\n      return dispatch({\n        type: FETCHLASTMESSAGE.SUCCESS,\n        payload: result\n      });\n    })\n    .catch(err => {\n      return Promise.reject(\n        dispatch({ type: FETCHLASTMESSAGE.FAIL, payload: err })\n      );\n    });\n};\n\nexport const deleteMessage = (messageId, token) => dispatch => {\n  dispatch({\n    type: DELETEMESSAGE.START\n  });\n  return fetch(url + `/` + messageId, {\n    method: \"DELETE\",\n    headers: { ...jsonHeaders, Authorization: \"Bearer \" + token }\n  })\n    .then(handleJsonResponse)\n    .then(result => {\n      return dispatch({\n        type: DELETEMESSAGE.SUCCESS,\n        payload: result\n      });\n    })\n    .catch(err => {\n      return Promise.reject(\n        dispatch({ type: DELETEMESSAGE.FAIL, payload: err })\n      );\n    });\n};\n\nexport const getOldMessages = playerName => dispatch => {\n  dispatch({\n    type: GETOLDMESSAGES.START\n  });\n  return fetch(url + `?limit=100&offset=0&username=` + playerName, {\n    method: \"GET\",\n    headers: jsonHeaders\n  })\n    .then(handleJsonResponse)\n    .then(result => {\n      return dispatch({\n        type: GETOLDMESSAGES.SUCCESS,\n        payload: result\n      });\n    })\n    .catch(err => {\n      return Promise.reject(\n        dispatch({ type: GETOLDMESSAGES.FAIL, payload: err })\n      );\n    });\n};\n"]},"metadata":{},"sourceType":"module"}