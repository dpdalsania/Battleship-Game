{"ast":null,"code":"import _classCallCheck from \"/Users/drashti/Documents/battleship-project/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/Users/drashti/Documents/battleship-project/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"/Users/drashti/Documents/battleship-project/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/Users/drashti/Documents/battleship-project/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"/Users/drashti/Documents/battleship-project/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/inherits\";\nvar _jsxFileName = \"/Users/drashti/Documents/battleship-project/src/react/components/playGame/FireButton.js\";\nimport React from \"react\";\nimport { connect } from \"react-redux\";\nimport { fireTorpedo, startBoard } from \"../../../redux/index\";\nimport { boards } from \"../setUpBoard\";\nimport { checkForWin } from \"./checkForWin\";\nimport { WaitScreen } from \"../waitScreen/\";\n\nvar FireButton =\n/*#__PURE__*/\nfunction (_React$Component) {\n  _inherits(FireButton, _React$Component);\n\n  function FireButton() {\n    var _getPrototypeOf2;\n\n    var _this;\n\n    _classCallCheck(this, FireButton);\n\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    _this = _possibleConstructorReturn(this, (_getPrototypeOf2 = _getPrototypeOf(FireButton)).call.apply(_getPrototypeOf2, [this].concat(args)));\n    _this.state = {\n      hitAddress: [],\n      missAddress: [],\n      didPlayerWin: false,\n      didPlayerAcknowledgeWin: false,\n      didPlayerSinkBattleship: false,\n      didPlayerSinkCarrier: false,\n      didPlayerSinkCruiser: false,\n      didPlayerSinkSubmarine: false,\n      didPlayerSinkDestroyer: false\n    };\n    _this.opponentName = _this.props.playerName === \"playerA\" ? \"playerB\" : \"playerA\";\n\n    _this.FireTorpedo = function (event) {\n      if (_this.props.TargetCell === null) {// alert(\"please choose coordinates by clicking on your opponent's board\");\n      } else {\n        _this.props.fireTorpedo({\n          text: \"Game \" + _this.props.gameNumber + \" torpedo \" + _this.props.TargetCell\n        });\n\n        boards[_this.opponentName][_this.props.TargetCell].torpedo = true;\n\n        if (checkForWin(boards[_this.opponentName]) === true) {\n          _this.setState({\n            didPlayerWin: true\n          });\n        } else {\n          if (!_this.state.didPlayerSinkBattleship) {\n            if (checkForWin(boards[_this.opponentName]).includes(\"battleship\")) {\n              _this.setState({\n                didPlayerSinkBattleship: true\n              });\n\n              alert(\"You sank your opponent's battleship!\");\n            }\n          }\n\n          if (!_this.state.didPlayerSinkCarrier) {\n            if (checkForWin(boards[_this.opponentName]).includes(\"carrier\")) {\n              _this.setState({\n                didPlayerSinkCarrier: true\n              });\n\n              alert(\"You sank your opponent's carrier!\");\n            }\n          }\n\n          if (!_this.state.didPlayerSinkCruiser) {\n            if (checkForWin(boards[_this.opponentName]).includes(\"cruiser\")) {\n              _this.setState({\n                didPlayerSinkCruiser: true\n              });\n\n              alert(\"You sank your opponent's cruiser!\");\n            }\n          }\n\n          if (!_this.state.didPlayerSinkSubmarine) {\n            if (checkForWin(boards[_this.opponentName]).includes(\"submarine\")) {\n              _this.setState({\n                didPlayerSinkSubmarine: true\n              });\n\n              alert(\"You sank your opponent's submarine!\");\n            }\n          }\n\n          if (!_this.state.didPlayerSinkDestroyer) {\n            if (checkForWin(boards[_this.opponentName]).includes(\"destroyer\")) {\n              _this.setState({\n                didPlayerSinkDestroyer: true\n              });\n\n              alert(\"You sank your opponent's destroyer!\");\n            }\n          }\n        }\n      }\n    };\n\n    return _this;\n  }\n\n  _createClass(FireButton, [{\n    key: \"render\",\n    value: function render() {\n      if (this.state.didPlayerWin) {\n        return React.createElement(WaitScreen, {\n          message: \"Congratulations! You sunk your opponent's fleet! You win!\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 74\n          },\n          __self: this\n        }, \"true\");\n      }\n\n      return React.createElement(\"button\", {\n        className: \"fireButton\",\n        onClick: this.FireTorpedo,\n        style: {\n          backgroundColor: \"red\",\n          borderRadius: \".5em\"\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 80\n        },\n        __self: this\n      }, \"Fire Torpedo!\");\n    }\n  }]);\n\n  return FireButton;\n}(React.Component);\n\nvar mapStateToProps = function mapStateToProps(state) {\n  return {\n    playerName: state.auth.login.result.username,\n    TargetCell: state.play.addCoordinates.result ? state.play.addCoordinates.result : null,\n    gameNumber: state.welcome.startGame.result ? state.welcome.startGame.result.message.text.slice(5, 9) : null,\n    board: state.manipulateBoards.startBoard.result\n  };\n};\n\nvar mapDispatchToProps = {\n  fireTorpedo: fireTorpedo,\n  startBoard: startBoard\n};\nexport default connect(mapStateToProps, mapDispatchToProps)(FireButton);","map":{"version":3,"sources":["/Users/drashti/Documents/battleship-project/src/react/components/playGame/FireButton.js"],"names":["React","connect","fireTorpedo","startBoard","boards","checkForWin","WaitScreen","FireButton","state","hitAddress","missAddress","didPlayerWin","didPlayerAcknowledgeWin","didPlayerSinkBattleship","didPlayerSinkCarrier","didPlayerSinkCruiser","didPlayerSinkSubmarine","didPlayerSinkDestroyer","opponentName","props","playerName","FireTorpedo","event","TargetCell","text","gameNumber","torpedo","setState","includes","alert","backgroundColor","borderRadius","Component","mapStateToProps","auth","login","result","username","play","addCoordinates","welcome","startGame","message","slice","board","manipulateBoards","mapDispatchToProps"],"mappings":"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","sourcesContent":["import React from \"react\";\n\nimport { connect } from \"react-redux\";\nimport { fireTorpedo, startBoard } from \"../../../redux/index\";\nimport { boards } from \"../setUpBoard\";\nimport { checkForWin } from \"./checkForWin\";\nimport { WaitScreen } from \"../waitScreen/\";\n\nclass FireButton extends React.Component {\n  state = {\n    hitAddress: [],\n    missAddress: [],\n    didPlayerWin: false,\n    didPlayerAcknowledgeWin: false,\n    didPlayerSinkBattleship: false,\n    didPlayerSinkCarrier: false,\n    didPlayerSinkCruiser: false,\n    didPlayerSinkSubmarine: false,\n    didPlayerSinkDestroyer: false\n  };\n\n  opponentName = this.props.playerName === \"playerA\" ? \"playerB\" : \"playerA\";\n\n  FireTorpedo = event => {\n    if (this.props.TargetCell === null) {\n      // alert(\"please choose coordinates by clicking on your opponent's board\");\n    } else {\n      this.props.fireTorpedo({\n        text:\n          \"Game \" + this.props.gameNumber + \" torpedo \" + this.props.TargetCell\n      });\n      boards[this.opponentName][this.props.TargetCell].torpedo = true;\n\n      if (checkForWin(boards[this.opponentName]) === true) {\n        this.setState({ didPlayerWin: true });\n      } else {\n        if (!this.state.didPlayerSinkBattleship) {\n          if (checkForWin(boards[this.opponentName]).includes(\"battleship\")) {\n            this.setState({ didPlayerSinkBattleship: true });\n            alert(\"You sank your opponent's battleship!\");\n          }\n        }\n        if (!this.state.didPlayerSinkCarrier) {\n          if (checkForWin(boards[this.opponentName]).includes(\"carrier\")) {\n            this.setState({ didPlayerSinkCarrier: true });\n            alert(\"You sank your opponent's carrier!\");\n          }\n        }\n        if (!this.state.didPlayerSinkCruiser) {\n          if (checkForWin(boards[this.opponentName]).includes(\"cruiser\")) {\n            this.setState({ didPlayerSinkCruiser: true });\n            alert(\"You sank your opponent's cruiser!\");\n          }\n        }\n        if (!this.state.didPlayerSinkSubmarine) {\n          if (checkForWin(boards[this.opponentName]).includes(\"submarine\")) {\n            this.setState({ didPlayerSinkSubmarine: true });\n            alert(\"You sank your opponent's submarine!\");\n          }\n        }\n        if (!this.state.didPlayerSinkDestroyer) {\n          if (checkForWin(boards[this.opponentName]).includes(\"destroyer\")) {\n            this.setState({ didPlayerSinkDestroyer: true });\n            alert(\"You sank your opponent's destroyer!\");\n          }\n        }\n      }\n    }\n  };\n\n  render() {\n    if (this.state.didPlayerWin) {\n      return (\n        <WaitScreen message=\"Congratulations! You sunk your opponent's fleet! You win!\">\n          true\n        </WaitScreen>\n      );\n    }\n    return (\n      <button\n        className={\"fireButton\"}\n        onClick={this.FireTorpedo}\n        style={{ backgroundColor: \"red\", borderRadius: \".5em\" }}\n      >\n        Fire Torpedo!\n      </button>\n    );\n  }\n}\n\nconst mapStateToProps = state => {\n  return {\n    playerName: state.auth.login.result.username,\n    TargetCell: state.play.addCoordinates.result\n      ? state.play.addCoordinates.result\n      : null,\n    gameNumber: state.welcome.startGame.result\n      ? state.welcome.startGame.result.message.text.slice(5, 9)\n      : null,\n    board: state.manipulateBoards.startBoard.result\n  };\n};\n\nconst mapDispatchToProps = {\n  fireTorpedo,\n  startBoard\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(FireButton);\n"]},"metadata":{},"sourceType":"module"}