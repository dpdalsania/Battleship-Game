{"ast":null,"code":"import _objectSpread from \"/Users/drashti/Documents/battleship-project/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/objectSpread2\";\nimport { domain, jsonHeaders, handleJsonResponse } from \"./constants\";\nimport { LOGIN, LOGOUT } from \"../actionTypes\";\nvar url = domain + \"/auth\";\nexport var login = function login(loginData) {\n  return function (dispatch) {\n    dispatch({\n      type: LOGIN.START\n    });\n    return fetch(url + \"/login\", {\n      method: \"POST\",\n      headers: jsonHeaders,\n      body: JSON.stringify(loginData)\n    }).then(handleJsonResponse).then(function (result) {\n      return dispatch({\n        type: LOGIN.SUCCESS,\n        payload: result\n      });\n    }).catch(function (err) {\n      return Promise.reject(dispatch({\n        type: LOGIN.FAIL,\n        payload: err\n      }));\n    });\n  };\n};\nexport var logout = function logout(token) {\n  return function (dispatch, getState) {\n    dispatch({\n      type: LOGOUT.START\n    });\n    return fetch(url + \"/logout\", {\n      method: \"GET\",\n      headers: _objectSpread({\n        Authorization: \"Bearer \" + token\n      }, jsonHeaders)\n    }).then(handleJsonResponse).then(function (result) {\n      return dispatch({\n        type: LOGOUT.SUCCESS,\n        payload: result\n      });\n    }).catch(function (err) {\n      if (err.statusCode === 401) {\n        return dispatch({\n          type: LOGOUT.SUCCESS,\n          payload: {\n            statusCode: 200\n          }\n        });\n      }\n\n      return Promise.reject(dispatch({\n        type: LOGOUT.FAIL,\n        payload: err.message\n      }));\n    });\n  };\n};","map":{"version":3,"sources":["/Users/drashti/Documents/battleship-project/src/redux/actionCreators/auth.js"],"names":["domain","jsonHeaders","handleJsonResponse","LOGIN","LOGOUT","url","login","loginData","dispatch","type","START","fetch","method","headers","body","JSON","stringify","then","result","SUCCESS","payload","catch","err","Promise","reject","FAIL","logout","token","getState","Authorization","statusCode","message"],"mappings":";AAAA,SAASA,MAAT,EAAiBC,WAAjB,EAA8BC,kBAA9B,QAAwD,aAAxD;AACA,SAASC,KAAT,EAAgBC,MAAhB,QAA8B,gBAA9B;AAEA,IAAMC,GAAG,GAAGL,MAAM,GAAG,OAArB;AAEA,OAAO,IAAMM,KAAK,GAAG,SAARA,KAAQ,CAAAC,SAAS;AAAA,SAAI,UAAAC,QAAQ,EAAI;AAC5CA,IAAAA,QAAQ,CAAC;AACPC,MAAAA,IAAI,EAAEN,KAAK,CAACO;AADL,KAAD,CAAR;AAIA,WAAOC,KAAK,CAACN,GAAG,GAAG,QAAP,EAAiB;AAC3BO,MAAAA,MAAM,EAAE,MADmB;AAE3BC,MAAAA,OAAO,EAAEZ,WAFkB;AAG3Ba,MAAAA,IAAI,EAAEC,IAAI,CAACC,SAAL,CAAeT,SAAf;AAHqB,KAAjB,CAAL,CAKJU,IALI,CAKCf,kBALD,EAMJe,IANI,CAMC,UAAAC,MAAM,EAAI;AACd,aAAOV,QAAQ,CAAC;AACdC,QAAAA,IAAI,EAAEN,KAAK,CAACgB,OADE;AAEdC,QAAAA,OAAO,EAAEF;AAFK,OAAD,CAAf;AAID,KAXI,EAYJG,KAZI,CAYE,UAAAC,GAAG,EAAI;AACZ,aAAOC,OAAO,CAACC,MAAR,CAAehB,QAAQ,CAAC;AAAEC,QAAAA,IAAI,EAAEN,KAAK,CAACsB,IAAd;AAAoBL,QAAAA,OAAO,EAAEE;AAA7B,OAAD,CAAvB,CAAP;AACD,KAdI,CAAP;AAeD,GApB6B;AAAA,CAAvB;AAsBP,OAAO,IAAMI,MAAM,GAAG,SAATA,MAAS,CAAAC,KAAK;AAAA,SAAI,UAACnB,QAAD,EAAWoB,QAAX,EAAwB;AACrDpB,IAAAA,QAAQ,CAAC;AACPC,MAAAA,IAAI,EAAEL,MAAM,CAACM;AADN,KAAD,CAAR;AAIA,WAAOC,KAAK,CAACN,GAAG,GAAG,SAAP,EAAkB;AAC5BO,MAAAA,MAAM,EAAE,KADoB;AAE5BC,MAAAA,OAAO;AAAIgB,QAAAA,aAAa,EAAE,YAAYF;AAA/B,SAAyC1B,WAAzC;AAFqB,KAAlB,CAAL,CAIJgB,IAJI,CAICf,kBAJD,EAKJe,IALI,CAKC,UAAAC,MAAM,EAAI;AACd,aAAOV,QAAQ,CAAC;AACdC,QAAAA,IAAI,EAAEL,MAAM,CAACe,OADC;AAEdC,QAAAA,OAAO,EAAEF;AAFK,OAAD,CAAf;AAID,KAVI,EAWJG,KAXI,CAWE,UAAAC,GAAG,EAAI;AACZ,UAAIA,GAAG,CAACQ,UAAJ,KAAmB,GAAvB,EAA4B;AAC1B,eAAOtB,QAAQ,CAAC;AACdC,UAAAA,IAAI,EAAEL,MAAM,CAACe,OADC;AAEdC,UAAAA,OAAO,EAAE;AAAEU,YAAAA,UAAU,EAAE;AAAd;AAFK,SAAD,CAAf;AAID;;AACD,aAAOP,OAAO,CAACC,MAAR,CACLhB,QAAQ,CAAC;AAAEC,QAAAA,IAAI,EAAEL,MAAM,CAACqB,IAAf;AAAqBL,QAAAA,OAAO,EAAEE,GAAG,CAACS;AAAlC,OAAD,CADH,CAAP;AAGD,KArBI,CAAP;AAsBD,GA3B0B;AAAA,CAApB","sourcesContent":["import { domain, jsonHeaders, handleJsonResponse } from \"./constants\";\nimport { LOGIN, LOGOUT } from \"../actionTypes\";\n\nconst url = domain + \"/auth\";\n\nexport const login = loginData => dispatch => {\n  dispatch({\n    type: LOGIN.START\n  });\n\n  return fetch(url + \"/login\", {\n    method: \"POST\",\n    headers: jsonHeaders,\n    body: JSON.stringify(loginData)\n  })\n    .then(handleJsonResponse)\n    .then(result => {\n      return dispatch({\n        type: LOGIN.SUCCESS,\n        payload: result\n      });\n    })\n    .catch(err => {\n      return Promise.reject(dispatch({ type: LOGIN.FAIL, payload: err }));\n    });\n};\n\nexport const logout = token => (dispatch, getState) => {\n  dispatch({\n    type: LOGOUT.START\n  });\n\n  return fetch(url + \"/logout\", {\n    method: \"GET\",\n    headers: { Authorization: \"Bearer \" + token, ...jsonHeaders }\n  })\n    .then(handleJsonResponse)\n    .then(result => {\n      return dispatch({\n        type: LOGOUT.SUCCESS,\n        payload: result\n      });\n    })\n    .catch(err => {\n      if (err.statusCode === 401) {\n        return dispatch({\n          type: LOGOUT.SUCCESS,\n          payload: { statusCode: 200 }\n        });\n      }\n      return Promise.reject(\n        dispatch({ type: LOGOUT.FAIL, payload: err.message })\n      );\n    });\n};\n"]},"metadata":{},"sourceType":"module"}