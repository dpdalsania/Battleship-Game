{"ast":null,"code":"import _classCallCheck from \"/Users/drashti/Documents/battleship-project/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/Users/drashti/Documents/battleship-project/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"/Users/drashti/Documents/battleship-project/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/Users/drashti/Documents/battleship-project/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"/Users/drashti/Documents/battleship-project/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/inherits\";\nvar _jsxFileName = \"/Users/drashti/Documents/battleship-project/src/react/components/devTools/DeleteOldMessagesButton.js\";\nimport React from \"react\";\nimport { connect } from \"react-redux\"; // import { OpponentBoardGrid } from \".\";\n// import { checkForLose } from \"../checkForLose\";\n// import { WaitScreen } from \"../../waitScreen\";\n\nimport { deleteMessage, getOldMessages } from \"../../../redux/index\";\n\nvar DeleteOldMessagesButton =\n/*#__PURE__*/\nfunction (_React$Component) {\n  _inherits(DeleteOldMessagesButton, _React$Component);\n\n  function DeleteOldMessagesButton() {\n    var _getPrototypeOf2;\n\n    var _this;\n\n    _classCallCheck(this, DeleteOldMessagesButton);\n\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    _this = _possibleConstructorReturn(this, (_getPrototypeOf2 = _getPrototypeOf(DeleteOldMessagesButton)).call.apply(_getPrototypeOf2, [this].concat(args)));\n\n    _this.deleteOldMessages = function () {\n      _this.props.getOldMessages(_this.props.playerName).then(function (result) {\n        result.payload.messages.map(function (message) {\n          return _this.props.deleteMessage(message.id, _this.props.token);\n        });\n      }).then(console.log(\"Messages Deleted\"));\n    };\n\n    return _this;\n  }\n\n  _createClass(DeleteOldMessagesButton, [{\n    key: \"render\",\n    value: function render() {\n      return React.createElement(React.Fragment, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 22\n        },\n        __self: this\n      }, React.createElement(\"h2\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 23\n        },\n        __self: this\n      }, \" Note: wait 5 seconds between clicks\"), React.createElement(\"button\", {\n        onClick: this.deleteOldMessages,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 24\n        },\n        __self: this\n      }, \"Delete Old Messages\"));\n    }\n  }]);\n\n  return DeleteOldMessagesButton;\n}(React.Component);\n\nvar mapStateToProps = function mapStateToProps(state) {\n  if (state.auth.login.result) {\n    return {\n      playerName: state.auth.login.result.username,\n      token: state.auth.login.result.token,\n      torpedoMessage: state.play.fireTorpedo.result ? state.play.fireTorpedo.result.message : null,\n      TargetCell: state.play.addCoordinates.result ? state.play.addCoordinates.result : null,\n      board: state.manipulateBoards.startBoard.result,\n      gameNumber: state.welcome.startGame.result ? state.welcome.startGame.result.message.text.slice(5, 9) : undefined\n    };\n  } else return {};\n};\n\nvar mapDispatchToProps = {\n  deleteMessage: deleteMessage,\n  getOldMessages: getOldMessages\n};\nexport default connect(mapStateToProps, mapDispatchToProps)(DeleteOldMessagesButton);","map":{"version":3,"sources":["/Users/drashti/Documents/battleship-project/src/react/components/devTools/DeleteOldMessagesButton.js"],"names":["React","connect","deleteMessage","getOldMessages","DeleteOldMessagesButton","deleteOldMessages","props","playerName","then","result","payload","messages","map","message","id","token","console","log","Component","mapStateToProps","state","auth","login","username","torpedoMessage","play","fireTorpedo","TargetCell","addCoordinates","board","manipulateBoards","startBoard","gameNumber","welcome","startGame","text","slice","undefined","mapDispatchToProps"],"mappings":";;;;;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,OAAT,QAAwB,aAAxB,C,CACA;AACA;AACA;;AACA,SAASC,aAAT,EAAwBC,cAAxB,QAA8C,sBAA9C;;IAEMC,uB;;;;;;;;;;;;;;;;;;UACJC,iB,GAAoB,YAAM;AACxB,YAAKC,KAAL,CACGH,cADH,CACkB,MAAKG,KAAL,CAAWC,UAD7B,EAEGC,IAFH,CAEQ,UAAAC,MAAM,EAAI;AACdA,QAAAA,MAAM,CAACC,OAAP,CAAeC,QAAf,CAAwBC,GAAxB,CAA4B,UAAAC,OAAO;AAAA,iBACjC,MAAKP,KAAL,CAAWJ,aAAX,CAAyBW,OAAO,CAACC,EAAjC,EAAqC,MAAKR,KAAL,CAAWS,KAAhD,CADiC;AAAA,SAAnC;AAGD,OANH,EAOGP,IAPH,CAOQQ,OAAO,CAACC,GAAR,CAAY,kBAAZ,CAPR;AAQD,K;;;;;;;6BAEQ;AACP,aACE,oBAAC,KAAD,CAAO,QAAP;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gDADF,EAEE;AAAQ,QAAA,OAAO,EAAE,KAAKZ,iBAAtB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,+BAFF,CADF;AAMD;;;;EAnBmCL,KAAK,CAACkB,S;;AAsB5C,IAAMC,eAAe,GAAG,SAAlBA,eAAkB,CAAAC,KAAK,EAAI;AAC/B,MAAIA,KAAK,CAACC,IAAN,CAAWC,KAAX,CAAiBb,MAArB,EAA6B;AAC3B,WAAO;AACLF,MAAAA,UAAU,EAAEa,KAAK,CAACC,IAAN,CAAWC,KAAX,CAAiBb,MAAjB,CAAwBc,QAD/B;AAELR,MAAAA,KAAK,EAAEK,KAAK,CAACC,IAAN,CAAWC,KAAX,CAAiBb,MAAjB,CAAwBM,KAF1B;AAILS,MAAAA,cAAc,EAAEJ,KAAK,CAACK,IAAN,CAAWC,WAAX,CAAuBjB,MAAvB,GACZW,KAAK,CAACK,IAAN,CAAWC,WAAX,CAAuBjB,MAAvB,CAA8BI,OADlB,GAEZ,IANC;AAQLc,MAAAA,UAAU,EAAEP,KAAK,CAACK,IAAN,CAAWG,cAAX,CAA0BnB,MAA1B,GACRW,KAAK,CAACK,IAAN,CAAWG,cAAX,CAA0BnB,MADlB,GAER,IAVC;AAYLoB,MAAAA,KAAK,EAAET,KAAK,CAACU,gBAAN,CAAuBC,UAAvB,CAAkCtB,MAZpC;AAcLuB,MAAAA,UAAU,EAAEZ,KAAK,CAACa,OAAN,CAAcC,SAAd,CAAwBzB,MAAxB,GACRW,KAAK,CAACa,OAAN,CAAcC,SAAd,CAAwBzB,MAAxB,CAA+BI,OAA/B,CAAuCsB,IAAvC,CAA4CC,KAA5C,CAAkD,CAAlD,EAAqD,CAArD,CADQ,GAERC;AAhBC,KAAP;AAkBD,GAnBD,MAmBO,OAAO,EAAP;AACR,CArBD;;AAuBA,IAAMC,kBAAkB,GAAG;AAAEpC,EAAAA,aAAa,EAAbA,aAAF;AAAiBC,EAAAA,cAAc,EAAdA;AAAjB,CAA3B;AAEA,eAAeF,OAAO,CACpBkB,eADoB,EAEpBmB,kBAFoB,CAAP,CAGblC,uBAHa,CAAf","sourcesContent":["import React from \"react\";\nimport { connect } from \"react-redux\";\n// import { OpponentBoardGrid } from \".\";\n// import { checkForLose } from \"../checkForLose\";\n// import { WaitScreen } from \"../../waitScreen\";\nimport { deleteMessage, getOldMessages } from \"../../../redux/index\";\n\nclass DeleteOldMessagesButton extends React.Component {\n  deleteOldMessages = () => {\n    this.props\n      .getOldMessages(this.props.playerName)\n      .then(result => {\n        result.payload.messages.map(message =>\n          this.props.deleteMessage(message.id, this.props.token)\n        );\n      })\n      .then(console.log(\"Messages Deleted\"));\n  };\n\n  render() {\n    return (\n      <React.Fragment>\n        <h2> Note: wait 5 seconds between clicks</h2>\n        <button onClick={this.deleteOldMessages}>Delete Old Messages</button>\n      </React.Fragment>\n    );\n  }\n}\n\nconst mapStateToProps = state => {\n  if (state.auth.login.result) {\n    return {\n      playerName: state.auth.login.result.username,\n      token: state.auth.login.result.token,\n\n      torpedoMessage: state.play.fireTorpedo.result\n        ? state.play.fireTorpedo.result.message\n        : null,\n\n      TargetCell: state.play.addCoordinates.result\n        ? state.play.addCoordinates.result\n        : null,\n\n      board: state.manipulateBoards.startBoard.result,\n\n      gameNumber: state.welcome.startGame.result\n        ? state.welcome.startGame.result.message.text.slice(5, 9)\n        : undefined\n    };\n  } else return {};\n};\n\nconst mapDispatchToProps = { deleteMessage, getOldMessages };\n\nexport default connect(\n  mapStateToProps,\n  mapDispatchToProps\n)(DeleteOldMessagesButton);\n"]},"metadata":{},"sourceType":"module"}