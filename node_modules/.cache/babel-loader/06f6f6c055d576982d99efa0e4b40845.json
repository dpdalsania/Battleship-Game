{"ast":null,"code":"import _classCallCheck from \"/Users/drashti/Documents/battleship-project/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/Users/drashti/Documents/battleship-project/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"/Users/drashti/Documents/battleship-project/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/Users/drashti/Documents/battleship-project/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"/Users/drashti/Documents/battleship-project/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/inherits\";\nvar _jsxFileName = \"/Users/drashti/Documents/battleship-project/src/react/components/setUpBoard/initialBoard/InitialBoardGrid.js\";\nimport React from \"react\";\nimport InitialBoardSquare from \"./InitialBoardSquare\";\nimport { connect } from \"../../../HOCs\";\nimport { placeBattleship, placeCarrier, placeCruiser, placeDestroyer, placeSubmarine, selectShip } from \"../../../../redux/index\";\n\nvar InitialBoardGrid =\n/*#__PURE__*/\nfunction (_React$Component) {\n  _inherits(InitialBoardGrid, _React$Component);\n\n  function InitialBoardGrid() {\n    var _getPrototypeOf2;\n\n    var _this;\n\n    _classCallCheck(this, InitialBoardGrid);\n\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    _this = _possibleConstructorReturn(this, (_getPrototypeOf2 = _getPrototypeOf(InitialBoardGrid)).call.apply(_getPrototypeOf2, [this].concat(args)));\n    _this.state = {\n      playerName: _this.props.playerName\n    };\n    _this.label = \"\";\n    _this.newRow = [];\n    _this.newBoard = [];\n    _this.rowLabels = [\" \", \"A\", \"B\", \"C\", \"D\", \"E\", \"F\", \"G\", \"H\", \"I\", \"J\"];\n    _this.targetRow = null;\n    _this.targetColumn = null;\n\n    _this.componentDidMount = function () {\n      console.log(_this.state.playerName);\n    };\n\n    _this.drawSquare = function (label, isShip, isHeader) {\n      return React.createElement(InitialBoardSquare, {\n        value: label,\n        isShip: isShip,\n        onClick: _this.handleClick,\n        key: label,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 32\n        },\n        __self: this\n      });\n    };\n\n    _this.checkForHeader = function (e) {\n      if (e.target.innerHTML.length === 1) {}\n    };\n\n    _this.drawRow = function (newRow, rowLabel) {\n      return React.createElement(\"div\", {\n        key: rowLabel,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 47\n        },\n        __self: this\n      }, newRow);\n    };\n\n    _this.doesAShipResideHereAndIfSoWhichOne = function (coordinates) {\n      if (_this.props.battleshipPosition !== null) {\n        if (_this.props.battleshipPosition.coordinates.includes(coordinates)) {\n          return true;\n        }\n      }\n\n      if (_this.props.carrierPosition !== null) {\n        if (_this.props.carrierPosition.coordinates.includes(coordinates)) {\n          return true;\n        }\n      }\n\n      if (_this.props.cruiserPosition !== null) {\n        if (_this.props.cruiserPosition.coordinates.includes(coordinates)) {\n          return true;\n        }\n      }\n\n      if (_this.props.carrierPosition !== null) {\n        if (_this.props.carrierPosition.coordinates.includes(coordinates)) {\n          return true;\n        }\n      }\n\n      if (_this.props.destroyerPosition !== null) {\n        if (_this.props.destroyerPosition.coordinates.includes(coordinates)) {\n          return true;\n        }\n      }\n\n      if (_this.props.submarinePosition !== null) {\n        if (_this.props.submarinePosition.coordinates.includes(coordinates)) {\n          return true;\n        }\n      }\n\n      return false;\n    };\n\n    _this.handleClick = function (e) {\n      _this.targetRow = e.target.innerHTML.slice(0, 1);\n      _this.targetColumn = e.target.innerHTML.slice(1);\n\n      if (_this.targetColumn === \"\" || _this.targetColumn === \"0\") {\n        return;\n      }\n\n      if (_this.props.activeShip === null) {} else {\n        _this.placeShip(_this.props.activeShip.name);\n      }\n    };\n\n    _this.placeShip = function () {\n      var position = _this.findSegmentPositions(_this.props.activeShip.length, _this.props.activeShip.orientation);\n\n      if (position === null) {\n        return null;\n      }\n\n      switch (_this.props.activeShip.name) {\n        case \"battleship\":\n          _this.props.placeBattleship(position);\n\n          _this.props.selectShip(null);\n\n          break;\n\n        case \"carrier\":\n          _this.props.placeCarrier(position);\n\n          _this.props.selectShip(null);\n\n          break;\n\n        case \"cruiser\":\n          _this.props.placeCruiser(position);\n\n          _this.props.selectShip(null);\n\n          break;\n\n        case \"destroyer\":\n          _this.props.placeDestroyer(position);\n\n          _this.props.selectShip(null);\n\n          break;\n\n        case \"submarine\":\n          _this.props.placeSubmarine(position);\n\n          _this.props.selectShip(null);\n\n          break;\n\n        default:\n          alert(\"No ship selected\");\n      }\n    };\n\n    _this.findSegmentPositions = function (length, orientation) {\n      var positionArray = [];\n      var positionObject = {\n        orientation: orientation,\n        coordinates: positionArray\n      };\n\n      if (orientation === \"horizontal\") {\n        for (var shipSegment = 0; shipSegment < length; shipSegment++) {\n          if (_this.targetColumn * 1 + shipSegment > 10 || _this.doesAShipResideHereAndIfSoWhichOne(_this.targetRow + (_this.targetColumn * 1 + shipSegment))) {\n            return null;\n          }\n\n          positionArray.push(_this.targetRow + (_this.targetColumn * 1 + shipSegment));\n        }\n      } else {\n        var rowIndex = _this.rowLabels.indexOf(_this.targetRow);\n\n        for (var _shipSegment = 0; _shipSegment < length; _shipSegment++) {\n          if (rowIndex + _shipSegment > 10 || _this.doesAShipResideHereAndIfSoWhichOne(_this.rowLabels[rowIndex + _shipSegment] + _this.targetColumn)) {\n            return null;\n          }\n\n          positionArray.push(_this.rowLabels[rowIndex + _shipSegment] + _this.targetColumn);\n        }\n      }\n\n      return positionObject;\n    };\n\n    return _this;\n  }\n\n  _createClass(InitialBoardGrid, [{\n    key: \"render\",\n    value: function render() {\n      this.newBoard = [];\n      this.newRow = [];\n\n      for (var headerRowLabels = 0; headerRowLabels <= 10; headerRowLabels++) {\n        if (headerRowLabels === 0) {\n          this.label = \"X\";\n        } else {\n          this.label = headerRowLabels;\n        }\n\n        var newSquare = this.drawSquare(this.label);\n        this.newRow.push(newSquare);\n      }\n\n      this.newBoard.push(this.drawRow(this.newRow, \"header\"));\n\n      for (var row = 1; row <= 10; row++) {\n        this.newRow = [];\n\n        for (var column = 0; column <= 10; column++) {\n          if (column === 0) {\n            this.label = this.rowLabels[row];\n          } else {\n            this.label = this.rowLabels[row] + column.toString();\n          }\n\n          var _newSquare = \"\";\n\n          if (!this.doesAShipResideHereAndIfSoWhichOne(this.label)) {\n            _newSquare = this.drawSquare(this.label, false);\n          }\n\n          if (this.doesAShipResideHereAndIfSoWhichOne(this.label)) {\n            _newSquare = this.drawSquare(this.label, true);\n          }\n\n          this.newRow.push(_newSquare);\n        }\n\n        this.newBoard.push(this.drawRow(this.newRow, row));\n      }\n\n      this.newBoard.className = \"newBoard\";\n      return this.newBoard;\n    }\n  }]);\n\n  return InitialBoardGrid;\n}(React.Component);\n\nvar mapStateToProps = function mapStateToProps(state) {\n  return {\n    playerName: state.auth.login.result ? state.auth.login.result.username : null,\n    activeShip: state.setUpGame.selectShip.result,\n    battleshipPosition: state.setUpGame.placeBattleship.result,\n    carrierPosition: state.setUpGame.placeCarrier.result,\n    cruiserPosition: state.setUpGame.placeCruiser.result,\n    destroyerPosition: state.setUpGame.placeDestroyer.result,\n    submarinePosition: state.setUpGame.placeSubmarine.result\n  };\n};\n\nvar mapDispatchToProps = {\n  placeBattleship: placeBattleship,\n  placeCarrier: placeCarrier,\n  placeCruiser: placeCruiser,\n  placeDestroyer: placeDestroyer,\n  placeSubmarine: placeSubmarine,\n  selectShip: selectShip\n};\nexport default connect(mapStateToProps, mapDispatchToProps)(InitialBoardGrid);","map":{"version":3,"sources":["/Users/drashti/Documents/battleship-project/src/react/components/setUpBoard/initialBoard/InitialBoardGrid.js"],"names":["React","InitialBoardSquare","connect","placeBattleship","placeCarrier","placeCruiser","placeDestroyer","placeSubmarine","selectShip","InitialBoardGrid","state","playerName","props","label","newRow","newBoard","rowLabels","targetRow","targetColumn","componentDidMount","console","log","drawSquare","isShip","isHeader","handleClick","checkForHeader","e","target","innerHTML","length","drawRow","rowLabel","doesAShipResideHereAndIfSoWhichOne","coordinates","battleshipPosition","includes","carrierPosition","cruiserPosition","destroyerPosition","submarinePosition","slice","activeShip","placeShip","name","position","findSegmentPositions","orientation","alert","positionArray","positionObject","shipSegment","push","rowIndex","indexOf","headerRowLabels","newSquare","row","column","toString","className","Component","mapStateToProps","auth","login","result","username","setUpGame","mapDispatchToProps"],"mappings":"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","sourcesContent":["import React from \"react\";\nimport InitialBoardSquare from \"./InitialBoardSquare\";\nimport { connect } from \"../../../HOCs\";\n\nimport {\n  placeBattleship,\n  placeCarrier,\n  placeCruiser,\n  placeDestroyer,\n  placeSubmarine,\n  selectShip\n} from \"../../../../redux/index\";\n\nclass InitialBoardGrid extends React.Component {\n  state = {\n    playerName: this.props.playerName\n  };\n\n  label = \"\";\n  newRow = [];\n  newBoard = [];\n  rowLabels = [\" \", \"A\", \"B\", \"C\", \"D\", \"E\", \"F\", \"G\", \"H\", \"I\", \"J\"];\n  targetRow = null;\n  targetColumn = null;\n\n  componentDidMount = () => {\n    console.log(this.state.playerName);\n  };\n\n  drawSquare = (label, isShip, isHeader) => {\n    return (\n      <InitialBoardSquare\n        value={label}\n        isShip={isShip}\n        onClick={this.handleClick}\n        key={label}\n      />\n    );\n  };\n\n  checkForHeader = e => {\n    if (e.target.innerHTML.length === 1) {\n    }\n  };\n\n  drawRow = (newRow, rowLabel) => {\n    return <div key={rowLabel}>{newRow}</div>;\n  };\n\n  doesAShipResideHereAndIfSoWhichOne = coordinates => {\n    if (this.props.battleshipPosition !== null) {\n      if (this.props.battleshipPosition.coordinates.includes(coordinates)) {\n        return true;\n      }\n    }\n\n    if (this.props.carrierPosition !== null) {\n      if (this.props.carrierPosition.coordinates.includes(coordinates)) {\n        return true;\n      }\n    }\n\n    if (this.props.cruiserPosition !== null) {\n      if (this.props.cruiserPosition.coordinates.includes(coordinates)) {\n        return true;\n      }\n    }\n\n    if (this.props.carrierPosition !== null) {\n      if (this.props.carrierPosition.coordinates.includes(coordinates)) {\n        return true;\n      }\n    }\n\n    if (this.props.destroyerPosition !== null) {\n      if (this.props.destroyerPosition.coordinates.includes(coordinates)) {\n        return true;\n      }\n    }\n\n    if (this.props.submarinePosition !== null) {\n      if (this.props.submarinePosition.coordinates.includes(coordinates)) {\n        return true;\n      }\n    }\n    return false;\n  };\n\n  handleClick = e => {\n    this.targetRow = e.target.innerHTML.slice(0, 1);\n    this.targetColumn = e.target.innerHTML.slice(1);\n    if (this.targetColumn === \"\" || this.targetColumn === \"0\") {\n      return;\n    }\n    if (this.props.activeShip === null) {\n    } else {\n      this.placeShip(this.props.activeShip.name);\n    }\n  };\n\n  placeShip = () => {\n    const position = this.findSegmentPositions(\n      this.props.activeShip.length,\n      this.props.activeShip.orientation\n    );\n    if (position === null) {\n      return null;\n    }\n    switch (this.props.activeShip.name) {\n      case \"battleship\":\n        this.props.placeBattleship(position);\n\n        this.props.selectShip(null);\n        break;\n      case \"carrier\":\n        this.props.placeCarrier(position);\n        this.props.selectShip(null);\n        break;\n      case \"cruiser\":\n        this.props.placeCruiser(position);\n        this.props.selectShip(null);\n        break;\n      case \"destroyer\":\n        this.props.placeDestroyer(position);\n        this.props.selectShip(null);\n        break;\n      case \"submarine\":\n        this.props.placeSubmarine(position);\n        this.props.selectShip(null);\n        break;\n      default:\n        alert(\"No ship selected\");\n    }\n  };\n\n  findSegmentPositions = (length, orientation) => {\n    let positionArray = [];\n    let positionObject = {\n      orientation: orientation,\n      coordinates: positionArray\n    };\n    if (orientation === \"horizontal\") {\n      for (let shipSegment = 0; shipSegment < length; shipSegment++) {\n        if (\n          this.targetColumn * 1 + shipSegment > 10 ||\n          this.doesAShipResideHereAndIfSoWhichOne(\n            this.targetRow + (this.targetColumn * 1 + shipSegment)\n          )\n        ) {\n          return null;\n        }\n        positionArray.push(\n          this.targetRow + (this.targetColumn * 1 + shipSegment)\n        );\n      }\n    } else {\n      let rowIndex = this.rowLabels.indexOf(this.targetRow);\n      for (let shipSegment = 0; shipSegment < length; shipSegment++) {\n        if (\n          rowIndex + shipSegment > 10 ||\n          this.doesAShipResideHereAndIfSoWhichOne(\n            this.rowLabels[rowIndex + shipSegment] + this.targetColumn\n          )\n        ) {\n          return null;\n        }\n        positionArray.push(\n          this.rowLabels[rowIndex + shipSegment] + this.targetColumn\n        );\n      }\n    }\n    return positionObject;\n  };\n\n  render() {\n    this.newBoard = [];\n    this.newRow = [];\n\n    for (let headerRowLabels = 0; headerRowLabels <= 10; headerRowLabels++) {\n      if (headerRowLabels === 0) {\n        this.label = \"X\";\n      } else {\n        this.label = headerRowLabels;\n      }\n      let newSquare = this.drawSquare(this.label);\n      this.newRow.push(newSquare);\n    }\n\n    this.newBoard.push(this.drawRow(this.newRow, \"header\"));\n\n    for (let row = 1; row <= 10; row++) {\n      this.newRow = [];\n      for (let column = 0; column <= 10; column++) {\n        if (column === 0) {\n          this.label = this.rowLabels[row];\n        } else {\n          this.label = this.rowLabels[row] + column.toString();\n        }\n        let newSquare = \"\";\n        if (!this.doesAShipResideHereAndIfSoWhichOne(this.label)) {\n          newSquare = this.drawSquare(this.label, false);\n        }\n        if (this.doesAShipResideHereAndIfSoWhichOne(this.label)) {\n          newSquare = this.drawSquare(this.label, true);\n        }\n        this.newRow.push(newSquare);\n      }\n      this.newBoard.push(this.drawRow(this.newRow, row));\n    }\n    this.newBoard.className = \"newBoard\";\n\n    return this.newBoard;\n  }\n}\n\nconst mapStateToProps = state => {\n  return {\n    playerName: state.auth.login.result\n      ? state.auth.login.result.username\n      : null,\n    activeShip: state.setUpGame.selectShip.result,\n    battleshipPosition: state.setUpGame.placeBattleship.result,\n    carrierPosition: state.setUpGame.placeCarrier.result,\n    cruiserPosition: state.setUpGame.placeCruiser.result,\n    destroyerPosition: state.setUpGame.placeDestroyer.result,\n    submarinePosition: state.setUpGame.placeSubmarine.result\n  };\n};\n\nconst mapDispatchToProps = {\n  placeBattleship,\n  placeCarrier,\n  placeCruiser,\n  placeDestroyer,\n  placeSubmarine,\n  selectShip\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(InitialBoardGrid);\n"]},"metadata":{},"sourceType":"module"}