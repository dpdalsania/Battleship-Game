{"ast":null,"code":"import _classCallCheck from \"/Users/drashti/Documents/battleship-project/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/Users/drashti/Documents/battleship-project/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"/Users/drashti/Documents/battleship-project/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/Users/drashti/Documents/battleship-project/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"/Users/drashti/Documents/battleship-project/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/inherits\";\nvar _jsxFileName = \"/Users/drashti/Documents/battleship-project/src/react/pages/PlayGame.js\";\nimport React from \"react\";\nimport \"./PlayGame.css\";\nimport { OpponentBoard, PlayerBoard, SurrenderButton } from \"../components/playGame\";\nimport { connect } from \"../HOCs\";\nimport board from \"../components/setUpBoard/whereDoTheShipsLive\";\nimport { startBoard, getOldMessages } from \"../../redux/index\";\n\nvar PlayGame =\n/*#__PURE__*/\nfunction (_React$Component) {\n  _inherits(PlayGame, _React$Component);\n\n  function PlayGame() {\n    var _getPrototypeOf2;\n\n    var _this;\n\n    _classCallCheck(this, PlayGame);\n\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    _this = _possibleConstructorReturn(this, (_getPrototypeOf2 = _getPrototypeOf(PlayGame)).call.apply(_getPrototypeOf2, [this].concat(args)));\n\n    _this.componentDidMount = function () {\n      _this.findOpponentShipCoordinates();\n    };\n\n    _this.findOpponentShipCoordinates = function () {\n      var opponentName = _this.determineOpponent();\n\n      _this.props.getOldMessages(opponentName).then(function (result) {\n        result.payload.messages.forEach(function (message) {\n          if (!message.text.includes(\"ready\") && !message.text.includes(\"torpedo\") && !message.text.includes(\"start\") && message.text.includes(_this.props.gameNumber)) {\n            var splitMessage = message.text.split(\" \");\n            var messageCoordinate = splitMessage[3];\n            var messageShipName = splitMessage[2];\n            board[opponentName][messageCoordinate].ship = messageShipName;\n          }\n        });\n      }).then(_this.props.startBoard(board));\n\n      return true;\n    };\n\n    _this.determineOpponent = function () {\n      if (_this.props.playerName === \"playerA\") {\n        return \"playerB\";\n      } else return \"playerA\";\n    };\n\n    return _this;\n  }\n\n  _createClass(PlayGame, [{\n    key: \"render\",\n    value: function render() {\n      return React.createElement(React.Fragment, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 48\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        className: \"twoBoards\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 49\n        },\n        __self: this\n      }, React.createElement(PlayerBoard, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 50\n        },\n        __self: this\n      }), React.createElement(OpponentBoard, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 51\n        },\n        __self: this\n      })), React.createElement(SurrenderButton, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 53\n        },\n        __self: this\n      }));\n    }\n  }]);\n\n  return PlayGame;\n}(React.Component);\n\nvar mapStateToProps = function mapStateToProps(state) {\n  return {\n    playerName: state.welcome.startGame.result ? state.welcome.startGame.result.message.username : null,\n    gameNumber: state.welcome.startGame.result ? state.welcome.startGame.result.message.text.slice(5, 9) : null,\n    reduxLayerBoard: state.manipulateBoards.startBoard.result\n  };\n};\n\nvar mapDispatchToProps = {\n  getOldMessages: getOldMessages,\n  startBoard: startBoard\n};\nexport default connect(mapStateToProps, mapDispatchToProps)(PlayGame);","map":{"version":3,"sources":["/Users/drashti/Documents/battleship-project/src/react/pages/PlayGame.js"],"names":["React","OpponentBoard","PlayerBoard","SurrenderButton","connect","board","startBoard","getOldMessages","PlayGame","componentDidMount","findOpponentShipCoordinates","opponentName","determineOpponent","props","then","result","payload","messages","forEach","message","text","includes","gameNumber","splitMessage","split","messageCoordinate","messageShipName","ship","playerName","Component","mapStateToProps","state","welcome","startGame","username","slice","reduxLayerBoard","manipulateBoards","mapDispatchToProps"],"mappings":"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","sourcesContent":["import React from \"react\";\nimport \"./PlayGame.css\";\nimport {\n  OpponentBoard,\n  PlayerBoard,\n  SurrenderButton\n} from \"../components/playGame\";\nimport { connect } from \"../HOCs\";\nimport board from \"../components/setUpBoard/whereDoTheShipsLive\";\nimport { startBoard, getOldMessages } from \"../../redux/index\";\n\nclass PlayGame extends React.Component {\n  componentDidMount = () => {\n    this.findOpponentShipCoordinates();\n  };\n\n  findOpponentShipCoordinates = () => {\n    let opponentName = this.determineOpponent();\n    this.props\n      .getOldMessages(opponentName)\n      .then(result => {\n        result.payload.messages.forEach(message => {\n          if (\n            !message.text.includes(\"ready\") &&\n            !message.text.includes(\"torpedo\") &&\n            !message.text.includes(\"start\") &&\n            message.text.includes(this.props.gameNumber)\n          ) {\n            let splitMessage = message.text.split(\" \");\n            let messageCoordinate = splitMessage[3];\n            let messageShipName = splitMessage[2];\n            board[opponentName][messageCoordinate].ship = messageShipName;\n          }\n        });\n      })\n      .then(this.props.startBoard(board));\n    return true;\n  };\n\n  determineOpponent = () => {\n    if (this.props.playerName === \"playerA\") {\n      return \"playerB\";\n    } else return \"playerA\";\n  };\n\n  render() {\n    return (\n      <React.Fragment>\n        <div className=\"twoBoards\">\n          <PlayerBoard />\n          <OpponentBoard />\n        </div>\n        <SurrenderButton />\n      </React.Fragment>\n    );\n  }\n}\nconst mapStateToProps = state => {\n  return {\n    playerName: state.welcome.startGame.result\n      ? state.welcome.startGame.result.message.username\n      : null,\n    gameNumber: state.welcome.startGame.result\n      ? state.welcome.startGame.result.message.text.slice(5, 9)\n      : null,\n    reduxLayerBoard: state.manipulateBoards.startBoard.result\n  };\n};\nconst mapDispatchToProps = {\n  getOldMessages,\n  startBoard\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(PlayGame);\n"]},"metadata":{},"sourceType":"module"}