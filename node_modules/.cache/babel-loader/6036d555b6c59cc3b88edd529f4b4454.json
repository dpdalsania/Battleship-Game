{"ast":null,"code":"import _classCallCheck from \"/Users/drashti/Documents/battleship-project/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/Users/drashti/Documents/battleship-project/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"/Users/drashti/Documents/battleship-project/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/Users/drashti/Documents/battleship-project/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"/Users/drashti/Documents/battleship-project/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/inherits\";\nvar _jsxFileName = \"/Users/drashti/Documents/battleship-project/src/react/components/home/JoinGameForm.js\";\nimport React from \"react\";\nimport { Spinner } from \"../\";\nimport { withAsyncAction } from \"../../HOCs\";\nimport { Redirect } from \"../\";\nimport { connect } from \"react-redux\";\nimport { getOldMessages, startGame, login } from \"../../../redux/actionCreators\";\nimport { WaitScreen } from \"../waitScreen\";\n\nvar JoinGameForm =\n/*#__PURE__*/\nfunction (_React$Component) {\n  _inherits(JoinGameForm, _React$Component);\n\n  function JoinGameForm() {\n    var _getPrototypeOf2;\n\n    var _this;\n\n    _classCallCheck(this, JoinGameForm);\n\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    _this = _possibleConstructorReturn(this, (_getPrototypeOf2 = _getPrototypeOf(JoinGameForm)).call.apply(_getPrototypeOf2, [this].concat(args)));\n    _this.state = {\n      value: \"\",\n      goToSetup: false,\n      loginData: {},\n      lookingForMatch: false,\n      message: \"Searching for your game...\",\n      hasStartedGame: false\n    };\n\n    _this.handleChange = function (e) {\n      _this.setState({\n        value: e.target.value\n      });\n    };\n\n    _this.handleJoin = function (e) {\n      e.preventDefault();\n\n      _this.props.login({\n        username: \"playerB\",\n        password: \"playerB\"\n      });\n\n      _this.setState({\n        lookingForMatch: true\n      });\n\n      _this.interval = setInterval(_this.waitToBeLoggedIn, 5000);\n    };\n\n    _this.waitToBeLoggedIn = function () {\n      if (_this.state.hasStartedGame === false) {\n        _this.props.startGame(_this.state.value, _this.props.token);\n\n        _this.setState({\n          hasStartedGame: true\n        });\n      }\n\n      if (_this.props.token) {\n        _this.checkGameNumber();\n\n        return true;\n      } else {\n        return false;\n      }\n    };\n\n    _this.checkGameNumber = function () {\n      _this.props.getOldMessages(\"playerA\").then(function (result) {\n        var matchingMessage = result.payload.messages.map(function (message) {\n          if (message.text === \"Game \" + _this.state.value + \" start\") {\n            if (message.username === \"playerA\") {\n              clearInterval(_this.interval);\n\n              _this.setState({\n                goToSetup: true\n              });\n            }\n          }\n\n          return matchingMessage;\n        });\n      }).then(function (result) {\n        if (result) {} else {}\n      });\n    };\n\n    return _this;\n  }\n\n  _createClass(JoinGameForm, [{\n    key: \"componentWillUnmount\",\n    value: function componentWillUnmount() {\n      clearInterval(this.interval);\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var _this$props = this.props,\n          loading = _this$props.loading,\n          error = _this$props.error;\n\n      if (this.state.goToSetup === true) {\n        return React.createElement(Redirect, {\n          to: \"/setup\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 76\n          },\n          __self: this\n        });\n      }\n\n      return React.createElement(React.Fragment, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 79\n        },\n        __self: this\n      }, this.state.lookingForMatch && React.createElement(WaitScreen, {\n        message: this.state.message,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 81\n        },\n        __self: this\n      }), React.createElement(\"form\", {\n        id: \"login-form\",\n        onSubmit: this.handleJoin,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 84\n        },\n        __self: this\n      }, React.createElement(\"button\", {\n        type: \"submit\",\n        disabled: loading,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 85\n        },\n        __self: this\n      }, \"Join Game\"), React.createElement(\"input\", {\n        type: \"text\",\n        name: \"gameId\",\n        autoFocus: true,\n        required: true,\n        onChange: this.handleChange,\n        placeholder: \"enter 4-digit game number\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 88\n        },\n        __self: this\n      })), loading && React.createElement(Spinner, {\n        name: \"circle\",\n        color: \"blue\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 97\n        },\n        __self: this\n      }), error && React.createElement(\"p\", {\n        style: {\n          color: \"red\"\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 98\n        },\n        __self: this\n      }, error.message));\n    }\n  }]);\n\n  return JoinGameForm;\n}(React.Component);\n\nvar mapStateToProps = function mapStateToProps(state) {\n  if (state.auth.login.result) {\n    return {\n      token: state.auth.login.result.token\n    };\n  } else return {};\n};\n\nvar mapDispatchToProps = {\n  getOldMessages: getOldMessages,\n  startGame: startGame,\n  login: login\n};\nexport default connect(mapStateToProps, mapDispatchToProps)(withAsyncAction(\"auth\", \"login\")(JoinGameForm));","map":{"version":3,"sources":["/Users/drashti/Documents/battleship-project/src/react/components/home/JoinGameForm.js"],"names":["React","Spinner","withAsyncAction","Redirect","connect","getOldMessages","startGame","login","WaitScreen","JoinGameForm","state","value","goToSetup","loginData","lookingForMatch","message","hasStartedGame","handleChange","e","setState","target","handleJoin","preventDefault","props","username","password","interval","setInterval","waitToBeLoggedIn","token","checkGameNumber","then","result","matchingMessage","payload","messages","map","text","clearInterval","loading","error","color","Component","mapStateToProps","auth","mapDispatchToProps"],"mappings":"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","sourcesContent":["import React from \"react\";\nimport { Spinner } from \"../\";\nimport { withAsyncAction } from \"../../HOCs\";\nimport { Redirect } from \"../\";\nimport { connect } from \"react-redux\";\nimport {\n  getOldMessages,\n  startGame,\n  login\n} from \"../../../redux/actionCreators\";\nimport { WaitScreen } from \"../waitScreen\";\n\nclass JoinGameForm extends React.Component {\n  state = {\n    value: \"\",\n    goToSetup: false,\n    loginData: {},\n    lookingForMatch: false,\n    message: \"Searching for your game...\",\n    hasStartedGame: false\n  };\n  componentWillUnmount() {\n    clearInterval(this.interval);\n  }\n\n  handleChange = e => {\n    this.setState({ value: e.target.value });\n  };\n\n  handleJoin = e => {\n    e.preventDefault();\n    this.props.login({ username: \"playerB\", password: \"playerB\" });\n    this.setState({ lookingForMatch: true });\n    this.interval = setInterval(this.waitToBeLoggedIn, 5000);\n  };\n\n  waitToBeLoggedIn = () => {\n    if (this.state.hasStartedGame === false) {\n      this.props.startGame(this.state.value, this.props.token);\n      this.setState({ hasStartedGame: true });\n    }\n    if (this.props.token) {\n      this.checkGameNumber();\n      return true;\n    } else {\n      return false;\n    }\n  };\n\n  checkGameNumber = () => {\n    this.props\n      .getOldMessages(\"playerA\")\n\n      .then(result => {\n        let matchingMessage = result.payload.messages.map(message => {\n          if (message.text === \"Game \" + this.state.value + \" start\") {\n            if (message.username === \"playerA\") {\n              clearInterval(this.interval);\n\n              this.setState({ goToSetup: true });\n            }\n          }\n          return matchingMessage;\n        });\n      })\n      .then(result => {\n        if (result) {\n        } else {\n        }\n      });\n  };\n\n  render() {\n    const { loading, error } = this.props;\n    if (this.state.goToSetup === true) {\n      return <Redirect to=\"/setup\" />;\n    }\n    return (\n      <React.Fragment>\n        {this.state.lookingForMatch && (\n          <WaitScreen message={this.state.message} />\n        )}\n\n        <form id=\"login-form\" onSubmit={this.handleJoin}>\n          <button type=\"submit\" disabled={loading}>\n            Join Game\n          </button>\n          <input\n            type=\"text\"\n            name=\"gameId\"\n            autoFocus\n            required\n            onChange={this.handleChange}\n            placeholder=\"enter 4-digit game number\"\n          />\n        </form>\n        {loading && <Spinner name=\"circle\" color=\"blue\" />}\n        {error && <p style={{ color: \"red\" }}>{error.message}</p>}\n      </React.Fragment>\n    );\n  }\n}\n\nconst mapStateToProps = state => {\n  if (state.auth.login.result) {\n    return {\n      token: state.auth.login.result.token\n    };\n  } else return {};\n};\n\nconst mapDispatchToProps = {\n  getOldMessages,\n  startGame,\n  login\n};\n\nexport default connect(\n  mapStateToProps,\n  mapDispatchToProps\n)(withAsyncAction(\"auth\", \"login\")(JoinGameForm));\n"]},"metadata":{},"sourceType":"module"}